spark-shell
var df = spark.read.format("csv").load("s3://delay-airline/Input/DelayedFlights-updated.csv")
df.show()

df.write.format ("parquet").partitionBy("_c1").save("s3://delay-airline/sparkSession/DelayeaFlights-updated-df")

val df_partitioned = spark.read.format("parquet").load("s3://delay-airline/sparkSession/DelayeaFlights-updated-df")
df_partitioned.show()

df_partitioned.createOrReplaceTempView("delay_flights")

************QUERIES***********

val result_df1 = spark.time(spark.sql("SELECT _c1 as Year, avg(('CarrierDelay'/'ArrDelay')*100) as Year_wise_carrier_delay from delay_flights GROUP BY _c1 ORDER BY _c1 DESC").show())

val result_df2 = spark.time(spark.sql("SELECT _c1 as Year, avg(('NASDelay'/'ArrDelay')*100) as Year_wise_NAS_delay from delay_flights GROUP BY _c1 ORDER BY _c1 DESC").show())

val result_df3 = spark.time(spark.sql("SELECT _c1 as Year, avg(('WeatherDelay'/'ArrDelay')*100) as Year_wise_weather_delay from delay_flights GROUP BY _c1 ORDER BY _c1 DESC").show())

val result_df4 = spark.time(spark.sql("SELECT _c1 as Year, avg(('LateAircraftDelay'/'ArrDelay')*100) as Year_wise_LateAircraft_delay from delay_flights GROUP BY _c1 ORDER BY _c1 DESC").show())

val result_df5 = spark.time(spark.sql("SELECT _c1 as Year, avg(('SecurityDelay'/'ArrDelay')*100) as Year_wise_security_delay from delay_flights GROUP BY _c1 ORDER BY _c1 DESC").show())


--------------------------------------------------------------------------------------------

hive

CREATE TABLE delay_flights (
  Id INT,
  Year INT,
  Month INT,
  DayofMonth INT,
  DayOfWeek INT,
  DepTime INT,
  CRSDepTime INT,
  ArrTime INT,
  CRSArrTime INT,
  UniqueCarrier STRING,
  FlightNum INT,
  TailNum STRING,
  ActualElapsedTime INT,
  CRSElapsedTime INT,
  AirTime INT,
  ArrDelay DOUBLE,
  DepDelay DOUBLE,
  Origin STRING,
  Dest STRING,
  Distance INT,
  TaxiIn INT,
  TaxiOut INT,
  Cancelled INT,
  CancellationCode STRING,
  Diverted DOUBLE,
  CarrierDelay INT,
  WeatherDelay INT,
  NASDelay INT,
  SecurityDelay INT,
  LateAircraftDelay INT
)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' LOCATION 's3://delay-airline/mapReduceSession/';

show databases;
show tables;

LOAD DATA INPATH 's3://delay-airline/Input/DelayedFlights-updated.csv' OVERWRITE INTO TABLE delay_flights;

SELECT Year, avg((CarrierDelay/ArrDelay)*100) as Year_wise_carrier_delay from delay_flights GROUP BY Year ORDER BY Year DESC;

SELECT Year, avg((NASDelay/ArrDelay) *100) as Year_wise_NAS_delay from delay_flights GROUP BY Year ORDER BY Year DESC;

SELECT Year, avg((WeatherDelay/ArrDelay) *100) as Year_wise_Weather_delay from delay_flights GROUP BY Year ORDER BY Year DESC;

SELECT Year, avg((LateAircraftDelay/ArrDelay) *100) as Year_wise_LateAircraft_delay from delay_flights GROUP BY Year ORDER BY Year DESC;

SELECT Year, avg((SecurityDelay/ArrDelay) *100) as Year_wise_Security_delay from delay_flights GROUP BY Year ORDER BY Year DESC;

























